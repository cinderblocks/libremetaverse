init:
  - ps: if ($env:APPVEYOR_REPO_TAG -eq "true") { $env:TAG_VERSION = "$env:APPVEYOR_REPO_TAG_NAME.$env:APPVEYOR_BUILD_NUMBER" } else { $env:TAG_VERSION = "v2.2.0.$env:APPVEYOR_BUILD_NUMBER-alpha" }
  - ps: $env:TAG_VERSION = $env:TAG_VERSION -replace 'v',''
  - ps: Write-Host "Setting version to '$env:TAG_VERSION'"
  - ps: Update-AppveyorBuild -Version "$env:TAG_VERSION"

environment:
  matrix:
  - job_name: Windows Build
    platform: Any CPU
    appveyor_build_worker_image: Visual Studio 2022
    configuration: Release
  - job_name: Linux Build
    platform: Any CPU
    appveyor_build_worker_image: Ubuntu2204
    configuration: Release
  - job_name: Mac Build
    platform: Any CPU
    appveyor_build_worker_image: macos-sonoma
    configuration: Release

  LMVTestAgentUsername: SecretAgentTest Resident
  LMVTestAgentPassword:
    secure: bOoXrGfLiHjZlCG1tJ+nDQ==
  PfxDownloadUrl:
    secure: T8uKu+tTR2G7LDE1zPGNOi+prl4YaKXP6DOC5eU6A14FEQkd8PFR3nQ1WMwryphJ
  PfxDownloadPasswd:
    secure: nAIqrjhaoamhiuAcae/xNw==
  PfxPassword:
    secure: +vWSGzLkiBGVIxfPb+iRtD+/maQjI2d92hN4PoNAxMc=
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_CLI_WORKLOAD_UPDATE_NOTIFY_DISABLE: true

matrix:
  allow_failures:
  - image: Ubuntu2204
  - image: macos-sonoma

pull_requests:
  do_not_increment_build_number: false

nuget:
  disable_publish_on_pr: true

build:
  project: LibreMetaverse.sln
  parallel: true
  verbosity: minimal
  publish_nuget: true
  publish_nuget_symbols: true
  use_snupkg_format: true

cache:
  - packages -> **\packages.config
  - '%LocalAppData%\NuGet\Cache'

dotnet_csproj:
  patch: true
  file: '**\*.csproj;**\*.props'
  version: '{version}'
  package_version: '{version}'

before_build:
  - dotnet --info
  - dotnet restore LibreMetaverse.sln

artifacts:
  - path: 'nuget_libraries.zip'
    name: 'Nuget Library Archive'
    type: Auto
  - path: 'nuget_libraries_symbols.zip'
    name: 'Nuget Library Symbols'
    type: Auto

deploy:
  - provider: NuGet
    name: nuget_release
    api_key:
      secure: 43t/Xitgn6+MOe2nh5dHPxR7Hk7dtETAGzvX9oeKomg0JVg9CIYfJb5IolXqdgxL
    artifact: /.*LibreMetaverse.*(\.|\.s)nupkg/
    skip_symbols: false
    draft: false
    prerelease: false
    on:
      job_name: Windows build
      APPVEYOR_REPO_TAG: true
  - provider: GitHub
    name: github_releases
    description: Release v$(TAG_VERSION)
    auth_token:
      secure: KPXQ74CJ+1aD3/H12JeVwMedPvcyr4aL9O/CFL8sGJHN/WZCYjKw92m8CodgO90D
    artifact: /.*LibreMetaverse.*(\.|\.s)nupkg/
    skip_symbols: false
    draft: false
    prerelease: false
    on:
      job_name: Windows build
      APPVEYOR_REPO_TAG: true

for:
-
  matrix:
    only: 
      - job_name: Linux Build
      - job_name: Mac Build
  
  test: off # remove either when mono stops crashing or we stop supporting net481

-
  matrix:
    only:
      - job_name: Windows Build

  test: off
  after_build:
#    - ps: util/InstallRemotePfx.ps1 -PfxDownloadUrl $env:PfxDownloadUrl -PfxDownloadUser AppVeyor -PfxDownloadPasswd $env:PfxDownloadPasswd -PfxPasswd $env:PfxPassword
#    - ps: util/SignPackages.ps1 -PfxPasswd $env:PfxPassword
    - ps: Get-ChildItem -Filter "*.nupkg" -Path "C:\Users\appveyor\AppData\Local\Temp\" -recurse | Compress-Archive -DestinationPath "nuget_libraries.zip" -Verbose
    - ps: Get-ChildItem -Filter "*.snupkg" -Path "C:\Users\appveyor\AppData\Local\Temp\" -recurse | Compress-Archive -DestinationPath "nuget_libraries_symbols.zip" -Verbose
